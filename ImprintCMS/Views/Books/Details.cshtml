@model Book
@{
    ViewBag.Title = Model.Title;
    var stores = ViewBag.Stores as IEnumerable<ExternalStore>;
}
<div id="image">
    @if (Model.Editions.Any(e => e.SmallCoverId != null))
    {
        @Html.CoverImage(Model.Editions.Where(e => e.SmallCoverId != null).OrderBy(e => e.Number).Last())
    }
    @if (Model.Editions.Any(e => e.LargeCoverId != null))
    {
        var edition = Model.Editions.Where(e => e.LargeCoverId != null).OrderBy(e => e.Number).Last();
        var url = Url.Action("display", "upload", new { category = edition.UploadedFile1.Category, fileName = edition.UploadedFile1.FileName });
        <p class="download">@Html.ImageDownload(url, SitePhrases.LabelLargeCover, ((SiteConfig)ViewBag.Config).CoverImageDownloadNotice)</p>
    }
    @if (Model.Editions.Any())
    {
        <div id="editions">
            @foreach (var edition in Model.Editions.OrderBy(e => e.ReleaseDate).ThenBy(e => e.Number))
            {
                <div class="@String.Format("edition binding_{0}", edition.BindingId)">
                    <h2>@edition.Binding.Name</h2>
                    <p class="metadata">@String.Format(SitePhrases.LabelIsbn, edition.Isbn.AsIsbn())<br />
                        <span class="releaseyear">@(!edition.Binding.HideEditionNumber ? String.Format(SitePhrases.LabelEdition, edition.Number) + ", " + edition.ReleaseDate.Year : edition.ReleaseDate.Year.ToString())</span><br />
                        @if (edition.PageCount != null)
                        {
                            <span class="pagecount">@String.Format("{0} {1}", edition.PageCount, SitePhrases.UnitPagesPlural)</span><br />
                        }
                        @if (edition.Price != null)
                        {
                            @String.Format(SitePhrases.UnitPrice, edition.Price)
                        }
                    </p>
                    @if (edition.IsForSale)
                    {
                        if (!edition.Binding.UsesExternalStores)
                        {
                        <p class="addtoshop">@Html.ActionLink(SitePhrases.LabelAddToShop, "add", "shop", new { id = edition.Id }, new { @class = "addtobasket" })</p>
                        }
                        else
                        {
                        <div class="externalstores">
                            <p>@SitePhrases.LabelBuyThroughExternalStores</p>
                            <ul>
                                @foreach (var store in stores)
                                {
                                    <li><a href="@String.Format("{0}{1}{2}", store.UrlPrefix, edition.Isbn, store.UrlPostfix)">@store.Name</a></li>}
                            </ul>
                        </div>
                        }
                    }
                    else
                    {
                        <p class="notforsale">@SitePhrases.LabelNotForSale</p>                  
                    }
                </div>
            }
        </div>
    }
    <div id="social">
        @Html.Twitter(Model.Title, string.Empty)
        @Html.Facebook()
    </div>
</div>
<div id="main">
    <ul class="rightsholders">
        @foreach (var relation in Model.Relations.OrderBy(r => r.SequenceIdentifier))
        {
            <li>
                @if (relation.Person.HasPage)
                {
                    @Html.ActionLink(relation.PersonName, "details", "authors", new { id = relation.PersonId }, null)
                }
                else
                {
                    @relation.PersonName
                }
            </li>
        }
    </ul>
    <h1>@Model.Title</h1>
    @if (!String.IsNullOrWhiteSpace(Model.Subtitle))
    {
        <p class="subtitle">@Model.Subtitle</p>
    }
    @if (!String.IsNullOrWhiteSpace(Model.Description))
    {
        @Model.Description.ToRichText()
    }
    @if (Model.ExcerptId != null)
    {
        <p class="excerpt">@Html.ActionLink(String.Format(SitePhrases.LabelExcerpt, Model.Title), "display", "upload", new { category = Model.UploadedFile.Category, fileName = Model.UploadedFile.FileName }, null)</p>
    }
    @if (!String.IsNullOrWhiteSpace(Model.Quotes))
    {
        <h2>@String.Format(SitePhrases.HeadingBookQuotes, Model.Title)</h2>
        @Model.Quotes.ToRichText()
    }
    @if (Model.BookToArticles.Any(a => a.Article.IsVisible))
    {
        <h2>@String.Format(SitePhrases.HeadingArticlesAbout, Model.Title)</h2>
        <ul>
            @foreach (var article in Model.BookToArticles.Where(a => a.Article.IsVisible).Select(a => a.Article).OrderByDescending(a => a.Date))
            {
                <li>@Html.ActionLink(article.Title, "article", "home", new { id = article.Id }, null)
                    @String.Format("{0:D}", article.Date)</li>
            }
        </ul>
    }
</div>
